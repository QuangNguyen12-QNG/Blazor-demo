@page "/login"
@using ClothingStore.Models
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<h3 class="text-center my-4">Đăng nhập</h3>

<div class="d-flex justify-content-center">
    <div class="card shadow p-4" style="width: 100%; max-width: 400px;">
        <EditForm Model="@User" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label">Tên đăng nhập</label>
                <InputText @bind-Value="User.Username" class="form-control" />
                <ValidationMessage For="@(() => User.Username)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Mật khẩu</label>
                <InputText @bind-Value="User.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => User.Password)" />
            </div>

            <div class="d-grid">
                <button type="submit" class="btn btn-primary">Đăng nhập</button>
            </div>
        </EditForm>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger mt-3">@ErrorMessage</div>
        }

        <div class="mt-3 text-center">
            <a href="/register">Đăng ký tài khoản</a> | <a href="/forgot-password">Quên mật khẩu?</a>
        </div>
    </div>
</div>

@code {
    private UserLogin User = new();
    private string ErrorMessage;

    private async Task HandleLogin()
    {
        var storedUsername = await JS.InvokeAsync<string>("sessionStorage.getItem", "username");
        var storedPassword = await JS.InvokeAsync<string>("sessionStorage.getItem", "password");

        if (User.Username == storedUsername && User.Password == storedPassword)
        {
            await JS.InvokeVoidAsync("sessionStorage.setItem", "isLoggedIn", "true");
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "Tên đăng nhập hoặc mật khẩu không đúng.";
        }
    }
}
