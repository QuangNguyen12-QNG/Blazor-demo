@page "/forgot-password"
@using ClothingStore.Models
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<h3 class="text-center my-4">Đặt lại mật khẩu</h3>

<div class="d-flex justify-content-center">
    <div class="card shadow p-4" style="width: 100%; max-width: 400px;">
        <EditForm Model="@ResetPasswordModel" OnValidSubmit="HandleResetPassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label">Tên đăng nhập</label>
                <InputText @bind-Value="ResetPasswordModel.Username" class="form-control" />
                <ValidationMessage For="@(() => ResetPasswordModel.Username)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Mật khẩu mới</label>
                <InputText @bind-Value="ResetPasswordModel.NewPassword" type="password" class="form-control" />
                <ValidationMessage For="@(() => ResetPasswordModel.NewPassword)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Nhập lại mật khẩu</label>
                <InputText @bind-Value="ResetPasswordModel.ConfirmPassword" type="password" class="form-control" />
                <ValidationMessage For="@(() => ResetPasswordModel.ConfirmPassword)" />
            </div>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger">@ErrorMessage</div>
            }

            @if (!string.IsNullOrEmpty(SuccessMessage))
            {
                <div class="alert alert-success">@SuccessMessage</div>
            }

            <div class="d-grid">
                <button type="submit" class="btn btn-primary">Xác nhận</button>
            </div>
        </EditForm>

        <div class="text-center mt-3">
            <a href="/login">Quay lại đăng nhập</a>
        </div>
    </div>
</div>

@code {
    private ResetPasswordModel ResetPasswordModel = new();
    private string ErrorMessage;
    private string SuccessMessage;

    private async Task HandleResetPassword()
    {
        // Kiểm tra mật khẩu nhập lại
        if (ResetPasswordModel.NewPassword != ResetPasswordModel.ConfirmPassword)
        {
            ErrorMessage = "Mật khẩu không khớp!";
            SuccessMessage = string.Empty;
            return;
        }

        // Kiểm tra xem tên người dùng có tồn tại không (giả lập)
        var storedUsername = await JS.InvokeAsync<string>("sessionStorage.getItem", "username");
        if (storedUsername != ResetPasswordModel.Username)
        {
            ErrorMessage = "Tên đăng nhập không đúng!";
            SuccessMessage = string.Empty;
            return;
        }

        // Cập nhật mật khẩu mới (giả lập)
        await JS.InvokeVoidAsync("sessionStorage.setItem", "password", ResetPasswordModel.NewPassword);

        ErrorMessage = string.Empty;
        SuccessMessage = "Đặt lại mật khẩu thành công!";
        NavigationManager.NavigateTo("/login", true);
    }
}
